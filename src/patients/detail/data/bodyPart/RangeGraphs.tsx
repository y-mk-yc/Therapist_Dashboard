import { CircleCutout, CircleCutoutElbow, CircleCutoutShoulderHFE } from "../../../../common/graphs/rangeGraph/CircleCutout";
import { RangeGraphWrapper } from "./RangeGraphWrapper";
import { RangeData } from "../../../../common/graphs/rangeGraph/RangeGraph";

export const HorizontalShoulder = (props: { data: RangeData, period: 'Week' | 'Month' | 'AllTime' }) =>
{
    return <RangeGraphWrapper
        title={'Horizontal flexion/extension'}
        data={props.data}
        type={'SHFE'}
        period={props.period}
        svgBuilder={
            (dato) => <svg width="145" height="185" viewBox="0 0 145 185" fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M40.6444 92.6853C43.5295 90.3912 45.4256 86.1947 45.4256 81.7396C45.4256 74.9662 38.6522 68.9897 35.4647 69.3881C29.2889 69.3881 24.1093 75.7629 24.1093 81.7396C24.1093 85.87 26.8685 90.2856 30.4143 92.6853M40.6444 92.6853C39.143 93.879 37.3739 94.5576 35.4647 94.4894C33.7415 94.4279 31.9993 93.758 30.4143 92.6853M40.6444 92.6853C42.2381 92.3569 46.0232 91.5009 48.4139 90.704C51.4021 89.7079 56.1834 89.7079 58.9724 89.3095C61.7615 88.9111 65.1482 84.1298 65.1482 81.7396C65.1482 79.3494 62.7575 75.9619 61.1638 75.7627C59.5701 75.5635 56.781 73.1729 54.5896 72.177C52.3982 71.1811 47.617 62.6145 33.4725 62.2161C19.328 61.8177 12.9531 70.384 10.3632 72.177C7.97263 72.5757 1 77.7549 1 81.7396C1 85.7244 4.98436 89.3095 6.37888 89.9072C7.77341 90.5048 20.7226 89.3095 23.3124 89.9072C25.3843 90.3853 28.9103 91.9584 30.4143 92.6853"
                    stroke="#435FE1" />
                <path
                    d="M54.5015 88.3155L127.247 130.627C127.821 130.839 129.123 131.171 129.736 130.807C130.502 130.353 118.537 121.705 118.082 120.939C117.628 120.173 122.211 123.359 122.534 122.856C122.857 122.354 123.468 122.509 122.678 121.528C121.889 120.546 112.028 115.621 110.353 114.543C108.677 113.465 100.183 104.208 96.617 102.387C93.0509 100.566 89.6753 100.29 84.3144 96.8399C78.9535 93.3901 82.6774 91.2846 74.4569 85.2839C67.8805 80.4834 65.3507 79.1871 64.9078 79.139"
                    stroke="#435FE1" strokeDasharray="2 2" />
                <path
                    d="M66.3446 82.4849L38.0983 3.21176C37.7963 2.67923 37.0164 1.58467 36.3135 1.46665C35.4349 1.31912 38.9915 15.648 38.844 16.5266C38.6965 17.4052 37.2529 12.0135 36.6815 12.1885C36.11 12.3636 35.7445 11.8505 35.7137 13.1101C35.6829 14.3697 40.0354 24.4959 40.619 26.4007C41.2026 28.3055 41.7144 40.8585 43.2626 44.5513C44.8107 48.2442 47.2103 50.6344 49.0777 56.7297C50.9452 62.825 46.7419 62.0292 49.1468 71.9187C51.0706 79.8303 52.166 82.4534 52.4732 82.776"
                    stroke="#435FE1" strokeDasharray="2 2" />
                <path
                    d="M40.9722 17.3689C46.2925 16.0645 51.8535 15.3728 57.576 15.3728C95.9545 15.3728 127.066 46.4847 127.066 84.8631C127.066 90.3247 123.239 110.892 116.612 121.537"
                    stroke="#9AD163" strokeDasharray="2 2" fill={'transparent'} />

                {dato !== undefined ? <CircleCutoutShoulderHFE minAngle={dato.Min} maxAngle={dato.Max} offsetAngle={0} centerX={60} centerY={81}
                    radius={66} textQuadrant={'TR'} /> : null}
            </svg>
        }
    />
}

export const VerticalShoulder = (props: { data: RangeData, period: 'Week' | 'Month' | 'AllTime' }) =>
{
    return <RangeGraphWrapper
        title={'Vertical flexion/extension'}
        data={props.data}
        type={'SFE'}
        period={props.period}
        svgBuilder={
            (dato) => <svg width="145" height="185" viewBox="0 0 145 185" fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M39.5187 85.8263C39.6126 86.8141 37.1283 91.1172 36.5991 92.0338C35.9376 93.1795 33.0907 100.795 32.3189 102.132C31.5471 103.468 29.1297 112.257 29.4645 113.978C29.7992 115.699 26.0984 117.891 25.3266 119.228C24.5549 120.564 17.0712 141.196 16.1334 142.437C15.1956 143.678 10.2806 147.206 8.9576 149.497C7.89918 151.33 7.69 152.076 8.0779 152.555C13.1678 145.277 6.9575 156.796 7.0573 158.157C7.1571 159.518 11.923 156.709 14.4372 152.661C17.5801 147.601 14.6483 146.927 16.9663 144.446C19.2843 141.965 28.7727 129.365 30.5367 126.31C32.3007 123.254 33.888 113.986 35.3784 112.555C36.8688 111.124 48.6024 94.6354 50.8101 92.3454C53.0179 90.0554 53.1664 80.2112 52.7254 80.9751"
                    stroke="#435FE1" strokeDasharray="2 2" />
                <path
                    d="M54.594 78.7586C54.33 77.8021 56.0294 73.133 56.3914 72.1384C56.8439 70.8952 58.3251 62.9012 58.853 61.4508C59.3809 60.0003 60.2355 50.9252 59.607 49.2885C58.9784 47.6517 62.2424 44.8506 62.7703 43.4002C63.2983 41.9497 67.0856 20.332 67.7937 18.9471C68.5018 17.5623 72.7295 13.2346 73.6345 10.7482C74.3585 8.759 74.435 7.98822 73.9699 7.58428C70.221 15.635 74.3367 3.21271 74.0021 1.88968C73.6675 0.566652 69.4619 4.16091 67.6887 8.58409C65.4723 14.1131 68.4766 14.2679 66.6246 17.1137C64.7727 19.9595 57.6164 34.0153 56.4097 37.3306C55.203 40.6459 55.2493 50.0489 54.03 51.7171C52.8108 53.3852 44.1186 71.6607 42.3421 74.2993C40.5655 76.9378 42.1287 86.6583 42.4303 85.8294"
                    stroke="#435FE1" strokeDasharray="2 2" />
                <path
                    d="M40.8489 57.3621C39.7142 57.2794 37.4448 57.6596 37.4448 59.8418C37.4448 62.0239 39.7142 62.2391 40.8489 62.0739"
                    stroke="#435FE1" />
                <path
                    d="M47.6803 79.566L48.6901 77.2498L50.1475 74.8257C52.4956 74.3409 57.3859 73.0803 58.1632 71.9165C58.9405 70.7528 58.4871 66.0987 58.1632 63.9172L60.5922 62.9475C59.8635 63.0283 58.3575 62.3657 58.1632 59.0689C57.9203 54.9479 51.6049 44.524 48.6901 44.524C45.7754 44.524 42.8606 44.2816 37.031 44.524C31.2014 44.7664 27.315 53.2508 27.315 58.0991C27.315 61.9777 31.5253 65.6946 33.6304 67.0683V71.9165C30.7966 74.4215 24.8374 80.5951 23.6715 85.2494C22.2141 91.0673 24.1573 109.248 25.1289 112.4C25.9062 114.921 26.4244 123.47 26.5864 127.429L56.22 128.156C56.22 128.156 55.2243 100.279 54.9673 97.7469C54.7102 95.2148 53.267 91.6866 53.267 91.6866"
                    stroke="#435FE1" />
                <path
                    d="M12.2546 153.728C52.2613 170.134 97.9936 151.003 114.401 110.996C130.808 70.9896 111.676 25.2573 71.6694 8.85034"
                    stroke="#9AD163" strokeDasharray="2 2" fill={'transparent'} />

                {dato !== undefined ? <CircleCutout minAngle={dato.Min} maxAngle={dato.Max} offsetAngle={20} centerX={41} centerY={81}
                    radius={78} textQuadrant={'TR'} /> : null}
            </svg>
        } />
}

export const SideShoulder = (props: { data: RangeData, period: 'Week' | 'Month' | 'AllTime' }) =>
{
    return <RangeGraphWrapper
        title={'Internal/external rotation'}
        type={'SIE'}
        data={props.data}
        period={props.period}
        svgBuilder={
            (dato) => <svg width="145" height="121" viewBox="0 0 130 185" fill="transparent"
                xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M98.1861 118.03C97.0443 111.637 90.1627 108.96 82.7623 109.21C76.8419 109.409 62.0511 108.377 55.3957 107.836C51.0897 112.881 35.9476 114.097 31.3958 110.943C29.8862 109.896 39.0412 108.792 39.5941 107.2M43.7551 105.932C40.9354 107.971 40.7083 103.992 39.5941 107.2M39.5941 107.2C35.9264 107.323 24.5208 107.15 23.0407 107.2C21.1906 107.262 9.60052 106.906 9.60058 104.321C9.60064 101.736 21.175 99.1342 23.9192 98.1228C26.6634 97.1115 102.941 89.6935 105.716 89.5999"
                    stroke="#435FE1" strokeDasharray="2 2" />
                <path
                    d="M22.0974 56.9094C28.2553 63.821 35.8735 67.5137 36.9543 67.5137C38.1874 67.5137 44.8169 63.9609 49.5764 54.6041M22.0974 56.9094C17.8201 52.1085 14.2474 45.7545 14.0597 38.0062C13.6018 19.1029 24.5912 8.95972 35.1227 8.95972C40.6174 9.42077 56.1857 13.5703 54.3542 36.623C53.7557 44.1553 51.8863 50.0632 49.5764 54.6041M22.0974 56.9094V73.9684C11.7867 75.8127 -10.8495 80.9765 -18.9084 86.878C-28.982 94.2549 -29.4399 97.9433 -29.4399 103.476C-29.4399 109.009 -29.4399 171.712 -29.4399 183.238C-29.4399 194.765 -23.4874 212.285 -24.861 226.578C-25.96 238.012 -21.3505 245.173 -18.9084 247.325C-15.3979 249.63 -8.19377 254.333 -7.46115 254.702C-6.54537 255.163 -5.17169 247.786 -7.46115 245.02C-9.75061 242.253 -17.0769 231.649 -17.0769 230.727C-17.0769 229.805 -7.46115 243.176 -5.62958 241.331C-3.79802 239.487 -12.0401 222.428 -12.9558 217.818C-13.8716 213.207 -8.83482 165.257 -8.83482 159.264C-8.83482 153.27 -4.25591 134.367 -5.62958 126.529C-6.72852 120.258 -8.83482 113.465 -9.75061 110.853C-6.85063 117.308 -1.05067 131.969 -1.05067 138.977C-1.05067 145.985 -1.05067 187.695 -1.05067 207.674H77.2488C77.2488 181.855 77.2488 128.281 77.2488 120.535C77.2488 112.789 81.2172 107.779 83.2014 106.242M49.5764 54.6041L51.6069 73.9684H75.4172"
                    stroke="#435FE1" />
                <path
                    d="M74.8813 73.6006C89.8798 75.1433 95.9793 91.6213 101.122 90.8808C107.55 89.9552 110.457 83.1679 110.457 75.7632C110.457 69.8395 111.988 55.0919 112.753 48.4585C107.856 43.9849 107.152 28.8103 110.457 24.3675C111.554 22.894 112.349 32.0811 113.922 32.6874M115.049 36.8887C113.105 34.0019 117.091 33.9091 113.922 32.6874M113.922 32.6874C113.922 29.0176 115.049 17.481 115.049 16.0001C115.049 14.1489 117.122 4.90493 119.042 5.11989C122.242 5.47816 122.604 14.5507 123.522 17.3275C124.44 20.1042 129.282 96.5888 129.282 99.3655C129.282 102.142 126.986 110.473 123.772 111.861C120.558 113.249 114.101 118.498 107.703 116.952C81.9214 110.721 86.2735 104.193 83.2014 106.241"
                    stroke="#435FE1" strokeDasharray="2 2" />
                <path
                    d="M11.8023 103.306C5.28406 55.0569 39.1135 10.6593 87.3625 4.14109C98.1485 2.68395 108.742 3.24314 118.763 5.52902"
                    stroke="#9AD163" strokeDasharray="2 2" fill={'transparent'} />
                {dato !== undefined ? <CircleCutout minAngle={dato.Min} maxAngle={dato.Max} offsetAngle={-105} centerX={95} centerY={87}
                    radius={82} textQuadrant={'BL'} /> : null}
                {/*TODO:这里的offsetAngle可能需要调整，在对应图像中可能是手臂接近水平位置为0度，接近垂直位置为90度？*/}
            </svg>
        } />
}

export const ElbowFlexionExtension = (props: { data: RangeData, period: 'Week' | 'Month' | 'AllTime' }) =>
{
    return <RangeGraphWrapper
        title={'Elbow flexion/extension'}
        data={props.data}
        type={'EFE'}
        period={props.period}
        padding={2}
        svgBuilder={
            (dato) => <svg width="166" height="174" viewBox="0 0 166 174" fill="transparent"
                xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M28.292 36.5957C73.4537 16.7123 126.183 37.2045 146.067 82.3663C153.041 98.2072 155.048 114.979 152.765 130.938"
                    stroke="#9AD163" strokeDasharray="2 2" />
                <g clipPath="url(#clip0_1584_18961)">
                    <path
                        d="M38.7753 111.602L30.3195 93.2196L31.848 89.7069L34.0539 86.0304C37.6077 85.2951 45.0096 83.3833 46.1861 81.6184C47.3625 79.8535 46.6763 72.7951 46.1861 69.4865L49.8625 68.0159C48.7596 68.1385 46.4802 67.1336 46.1861 62.1337C45.8184 55.8837 36.2597 40.0748 31.848 40.0748C27.4363 40.0748 23.0246 39.7071 14.2012 40.0748C5.37773 40.4424 -0.50456 53.3099 -0.50456 60.6628C-0.50456 66.545 5.86792 72.1822 9.05415 74.2655V81.6184C4.76499 85.4175 -2.52934 94.7803 -4.29403 101.839C-5.80329 107.876 -6.15978 115.981 -5.94116 123.366M-4.29397 139.91C-5.03095 136.537 -5.73695 130.265 -5.94116 123.366M14.2012 101.839C14.2012 105.515 32.1711 110.163 35.4422 110.499C46.1861 111.602 61.1772 111.602 63.7507 117.852M-5.94116 123.366C0.500583 127.901 15.2222 134.69 24.0455 134.396C35.0745 134.028 54.1922 134.396 66.3244 138.44C74.293 141.096 77.7213 136.601 79.1919 134.396"
                        stroke="#435FE1" />
                    <path
                        d="M70.629 137.794C74.3687 137.527 86.5482 134.993 87.2874 129.157C88.0266 123.322 89.8235 112.061 81.6756 103.247C73.5276 94.4327 49.0996 67.8023 49.1045 64.8382C49.1094 61.8742 44.5928 53.4513 43.0002 51.3967C41.4075 49.342 32.0002 34.9115 29.3583 37.4115C28.0681 38.6324 33.5593 57.0339 34.5002 59.4115M35.5002 60.4115C35.2701 59.9494 34.7277 59.9864 34.5002 59.4115M34.5002 59.4115C33.7601 58.8237 27.0375 57.0772 26.6348 57.9156C26.1315 58.9636 27.9091 60.2248 28.5 61.4114C29.0909 62.598 37.0174 66.6424 38.2915 68.2861C39.5656 69.9298 60.0034 110.507 62.0069 112.244C63.6098 113.632 65.6818 114.438 66.5174 114.668"
                        stroke="#435FE1" strokeDasharray="4 4" />
                    <path
                        d="M76.549 138.014C88.1923 135.095 126.941 130.501 129.539 131.928C132.137 133.355 140.933 133.823 143.5 133.411C146.067 133 158 131.928 158 129.411C158 127.635 141.538 122.727 139 122.411C139.871 122.044 147.542 118.167 147 117.411C146 116.017 144.324 116.962 143 116.911C141.675 116.86 133.757 120.458 131.704 120.787C129.65 121.116 80.7454 116.522 78.0955 116.44C72.396 116.266 64.095 117.438 64.095 117.438"
                        stroke="#435FE1" strokeDasharray="4 4" />
                </g>
                <defs>
                    <clipPath id="clip0_1584_18961">
                        <rect width="155" height="137" fill="white" transform="translate(0 37)" />
                    </clipPath>
                </defs>
                {dato !== undefined ? <CircleCutoutElbow minAngle={dato.Min} maxAngle={dato.Max} offsetAngle={4} centerX={65} centerY={117}
                    radius={89} textQuadrant={'TR'} /> : null}
            </svg>
        } />
}

export const WristPronationSupination = (props: { data: RangeData, period: 'Week' | 'Month' | 'AllTime' }) =>
{
    return <RangeGraphWrapper
        title={'Pronation/Supination'}
        data={props.data}
        type={'WPS'}
        period={props.period}
        svgBuilder={
            (dato) => <svg width="137" height="138" viewBox="0 0 137 138" fill="transparent"
                xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M120.174 53.7837C112.798 39.4587 99.3428 28.3705 82.3637 24.5463C57.1689 18.8717 32.1273 30.9733 20.4229 52.5435"
                    stroke="#9AD163" strokeDasharray="2 2" />
                <path
                    d="M16.5133 137C17.1323 131.784 17.9988 120.651 16.5133 117.845C14.6565 114.338 4.31096 107.324 3.78042 104.086C3.24988 100.849 -1.25982 90.5971 2.45395 89.518C4.26052 88.993 6.00435 91.1494 7.47165 93.5647M23.9409 104.626C21.2882 99.2302 12.269 99.7698 10.9427 99.2302C10.2615 98.9531 9.02068 96.1146 7.47165 93.5647M7.47165 93.5647C7.47165 87.8993 7.47165 76.0827 7.47165 74.1403C7.47165 71.7122 8.82039 66.5863 11.4731 66.5863C12.9356 66.5863 13.9949 67.6524 14.6511 68.7446M15.7174 89.2482C15.629 83.4029 15.4521 71.5504 15.4521 70.9029C15.4521 70.5397 15.1851 69.6335 14.6511 68.7446M14.6511 68.7446C14.6528 66.4964 15.346 62 18.1048 62C20.5793 62 21.6879 64.2225 22.1168 65.777M23.1449 84.6619C22.8797 79.0863 22.3491 67.7734 22.3491 67.1259C22.3491 66.8973 22.2856 66.3889 22.1168 65.777M22.1168 65.777C22.4595 64.7878 23.5694 62.8633 25.2671 63.0791C27.3892 63.3489 28.9808 66.5863 29.5114 68.7446C29.625 69.2067 29.7158 70.1815 29.7878 71.4424M30.0419 83.5827C30.0419 80.4873 29.985 74.8932 29.7878 71.4424M29.7878 71.4424C30.4031 70.9029 31.8458 69.8777 32.6946 70.0935C33.7557 70.3633 34.5515 72.5216 34.8168 74.1403C35.082 75.759 35.3473 87.6295 35.8778 89.518C36.4084 91.4065 38 97.6115 38 105.705C38 109.633 35.8778 114.608 35.8778 116.227C35.8778 117.522 36.5852 130.615 36.9389 137"
                    stroke="#435FE1" />
                <path
                    d="M122.905 137C122.272 131.79 121.385 120.668 122.905 117.865C124.806 114.362 135.123 106.546 135.666 103.312C136.209 100.078 136.579 79.4323 132.68 78.7872C129.422 78.2482 130.652 90.9276 129.15 93.3404C129.15 87.6808 129.15 76.1461 129.15 74.2057C129.15 71.7801 129.15 65.3121 126.435 65.3121C124.938 65.3121 123.721 65.8511 123.72 68.2766M123.72 89.2979C123.81 83.4586 123.72 72.1574 123.72 71.5106C123.72 71.1479 123.722 70.5225 123.72 68.2766M123.72 68.2766C123.718 66.0307 122.471 61 119.648 61C117.115 61 117.17 63.695 117.17 65.8511M116.118 84.7163C116.389 79.1466 117.17 68.9234 117.17 68.2766C117.17 68.0482 117.17 67.1986 117.17 65.8511M117.17 65.8511C116.82 64.8629 115.684 62.9404 113.946 63.156C111.774 63.4255 110.145 66.6596 109.602 68.8156C109.486 69.2772 109.133 72.946 109.059 74.2057M109.059 83.6383C109.059 80.546 108.857 77.6528 109.059 74.2057M109.059 74.2057C108.429 73.6667 106.941 70.4865 106.073 70.7021C104.987 70.9716 104.443 72.5887 104.172 74.2057C103.9 75.8227 103.217 87.6097 103.086 89.5674C102.543 97.6525 102.619 98.2539 103.629 106.277C104.172 110.589 104.987 114.901 104.987 116.518C104.987 117.811 102.362 130.622 102 137"
                    stroke="#435FE1" />
                <path
                    d="M75.0327 95.6644C78.8945 95.4168 80.9606 95.2008 84.4578 94.6787C83.8677 93.2355 83.3139 92.4291 81.9323 90.9999"
                    stroke="#4147D5" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
                <path
                    d="M88 102.019C86.7988 103.466 84.4551 104.727 81.3048 105.621C78.1545 106.516 74.3593 106.999 70.4632 107C66.5671 107.001 62.7701 106.521 59.6163 105.628C56.4626 104.735 54.114 103.475 52.9073 102.029C51.7005 100.583 51.6975 99.0254 52.8987 97.5788C54.0999 96.1321 56.4436 94.871 59.5939 93.9762C62.7442 93.0815 66.5393 92.5989 70.4355 92.5978C74.3316 92.5966 78.1286 93.0769 81.2824 93.9699L84.373 94.695"
                    stroke="#4147D5" strokeWidth="1.5" strokeLinecap="round" />
                {dato !== undefined ? <CircleCutout minAngle={dato.Min} maxAngle={dato.Max} offsetAngle={-90} centerX={70} centerY={81}
                    radius={58} textQuadrant={'TC'} /> : null}
            </svg>
        } />
}

export const HandOpenClose = (props: { data: RangeData, period: 'Week' | 'Month' | 'AllTime' }) =>
{
    return <RangeGraphWrapper
        title={'Open/Close'}
        data={props.data}
        type={'HOC'}
        period={props.period}
        svgBuilder={
            (dato) => <svg width="153" height="132" viewBox="0 0 153 132" fill="transparent"
                xmlns="http://www.w3.org/2000/svg">
                <path
                    d="M122.824 103.627C120.305 104.731 118.309 105.036 116.599 104.817M134.86 130.165C134.86 119.107 135.526 108.051 136.313 105.336C137.973 99.6071 138.29 89.687 140.463 85.3053C143.812 78.5531 153.951 69.4537 151.669 67.1527C148.712 64.1722 139.09 80.3696 137.043 79.4318C132.95 79.4318 145.587 54.3617 142.746 53.799C136.233 52.5091 134.997 74.5552 131.09 74.5552C127.182 74.5552 132.084 49 127.805 49C121.664 49 122.717 74.5552 121.042 74.5552C119.367 74.5552 113.84 55.0555 108.092 56.0941C104.798 56.6893 111.579 70.2724 114.109 79.4318C115.009 82.6905 112.179 88.6067 112.449 91.1476C108.675 87.6895 96.0875 85.3731 95.0176 89.687C94.5312 91.6483 104.271 94.4707 108.092 99.6071C111.008 101.965 113.256 104.39 116.599 104.817M116.599 104.817C116.599 104.817 116.872 111.582 116.599 115.768C116.202 121.864 114.109 131 114.109 131"
                    stroke="#435FE1" strokeWidth="0.5" strokeLinecap="round" strokeLinejoin="round" />
                <path
                    d="M9.41939 130.171L12.4997 107.786C8.66644 101.776 1 89.257 1 87.2672C1 84.7801 7.98194 76.6968 11.0622 75.4532C11.9143 75.1092 13.4189 74.7782 15.1692 74.5284M11.0622 87.889C11.0622 86.9925 13.357 85.7997 16.196 84.398M16.196 84.398C16.196 84.398 19.7153 85.9057 21.7405 87.2672C24.1434 88.8827 27.2849 92.2033 27.2849 92.2033M16.196 84.398C19.2301 82.8999 22.8858 81.1633 25.0261 79.2947M35.2936 131C35.499 125.611 36.4025 113.548 38.3739 108.408C40.8381 101.983 45.5612 87.4745 44.9451 81.4639C44.3291 75.4532 43.9184 75.0387 41.8649 75.0387C41.3105 75.0387 40.3372 75.0085 39.1953 74.9807M35.9097 82.9147C34.5407 83.122 31.8925 84.9873 32.008 86.8527C32.2134 90.169 30.1599 93.2779 28.3117 93.0707C26.4635 92.8634 25.6421 86.2309 25.4368 84.398C25.3972 84.045 25.5557 83.527 25.8432 82.9147M7.98194 77.1113C7.77659 74.3478 7.36588 68.5306 7.36588 67.3699C7.36588 65.919 10.2408 63.2246 12.705 63.0173C14.6764 62.8515 15.8537 63.9155 16.196 64.4682M16.196 64.4682C17.0174 64.1918 19.1941 63.6391 21.3298 63.6391C23.4654 63.6391 25.5502 65.9095 26.3256 67.0446M16.196 64.4682C15.8537 64.9518 15.1692 66.2092 15.1692 67.3699C15.1692 68.5306 15.1692 72.6258 15.1692 74.5284M39.1953 74.9807C36.1072 74.9055 31.7863 74.8479 31.1866 75.4532C30.5234 76.1226 27.0488 80.3475 25.8432 82.9147M39.1953 74.9807C37.2787 71.6838 32.7062 65.2143 29.7492 65.7118C28.0504 65.9975 27.0023 66.5022 26.3256 67.0446M25.0261 74.4532C25.8911 74.6712 26.4878 74.9963 26.6689 75.4532C27.191 76.7707 26.4386 78.0614 25.0261 79.2947M25.0261 74.4532C24.8892 72.8521 24.6975 69.484 25.0261 68.8207C25.248 68.3727 25.53 67.6825 26.3256 67.0446M25.0261 74.4532C22.7177 73.8717 18.4988 74.0532 15.1692 74.5284M25.0261 79.2947C24.8179 80.5014 24.6898 82.9147 25.8432 82.9147"
                    stroke="#435FE1" strokeWidth="0.5" />
                <path
                    d="M122.672 51.1873C114.531 37.2828 100.495 26.9396 83.3336 24.0406C57.8685 19.7388 33.519 33.1789 23 55.3513"
                    stroke="#9AD163" strokeDasharray="2 2" />
                <path
                    d="M60 105C59.4477 105 59 105.448 59 106C59 106.552 59.4477 107 60 107V105ZM91 106L81 100.226V111.774L91 106ZM60 107H82V105H60V107Z"
                    fill="#435FE1" />
                {dato !== undefined ? <CircleCutout minAngle={dato.Min} maxAngle={dato.Max} offsetAngle={-90} centerX={74} centerY={79}
                    radius={55} textQuadrant={'TC'} /> : null}
            </svg>
        } />
}